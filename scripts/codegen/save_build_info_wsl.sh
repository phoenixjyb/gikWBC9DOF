#!/bin/bash
# WSL Build Info Generator
# Run this in WSL BEFORE running MATLAB codegen

set -e

WORKSPACE="/mnt/c/Users/yanbo/wSpace/codegenGIKsample/Trial/gikWBC9DOF"
OUTPUT_DIR="$WORKSPACE/codegen/arm64_realtime"

cd "$WORKSPACE"

echo "=== Collecting Build Information ==="
echo ""

# Get git info
GIT_COMMIT=$(git rev-parse HEAD)
GIT_SHORT=$(git rev-parse --short HEAD)
GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
GIT_STATUS=$(git status --porcelain | wc -l)

# Get timestamp
BUILD_TIME=$(date '+%Y-%m-%d %H:%M:%S')
BUILD_ID=$(date '+%Y%m%d_%H%M%S')

# Get system info
BUILD_HOST=$(hostname)
BUILD_USER=$(whoami)
MATLAB_VERSION="R2024a (Linux WSL)"

echo "Git Commit:  $GIT_SHORT"
echo "Git Branch:  $GIT_BRANCH"
echo "Build Time:  $BUILD_TIME"
echo "Build ID:    $BUILD_ID"

if [ $GIT_STATUS -gt 0 ]; then
    echo "⚠️  Warning: $GIT_STATUS uncommitted changes"
fi

echo ""
echo "Creating build info files..."

# Create version tracking files
echo "$GIT_COMMIT" > "$OUTPUT_DIR/SOURCE_COMMIT.txt"
echo "$GIT_SHORT" > "$OUTPUT_DIR/SOURCE_COMMIT_SHORT.txt"
echo "$BUILD_TIME" > "$OUTPUT_DIR/BUILD_TIME.txt"
echo "$BUILD_ID" > "$OUTPUT_DIR/BUILD_ID.txt"

# Create comprehensive build info
cat > "$OUTPUT_DIR/BUILD_INFO.txt" << EOF
===========================================
BUILD INFORMATION
===========================================

Build Time:     $BUILD_TIME
Build ID:       $BUILD_ID
Git Commit:     $GIT_COMMIT
Git Short:      $GIT_SHORT
Git Branch:     $GIT_BRANCH
Git Status:     $([ $GIT_STATUS -eq 0 ] && echo "CLEAN" || echo "DIRTY ($GIT_STATUS uncommitted)")

Built On:       $BUILD_HOST (WSL)
Built By:       $BUILD_USER
MATLAB:         $MATLAB_VERSION (Linux)
Platform:       ARM64 cross-compile

===========================================
VERIFICATION
===========================================

To verify this build matches source:
  cd $WORKSPACE
  git checkout $GIT_SHORT
  git diff $GIT_SHORT

To check what changed since build:
  git log --oneline $GIT_SHORT..HEAD -- matlab/

===========================================
EOF

# Create C++ header with build info
cat > "$OUTPUT_DIR/build_info.h" << 'EOF'
// Auto-generated build information
// Generated by: save_build_info_wsl.sh
// DO NOT EDIT MANUALLY

#ifndef BUILD_INFO_H
#define BUILD_INFO_H

#include <string>

namespace BuildInfo {
    const std::string GIT_COMMIT    = "GIT_COMMIT_PLACEHOLDER";
    const std::string GIT_SHORT     = "GIT_SHORT_PLACEHOLDER";
    const std::string GIT_BRANCH    = "GIT_BRANCH_PLACEHOLDER";
    const std::string BUILD_TIME    = "BUILD_TIME_PLACEHOLDER";
    const std::string BUILD_ID      = "BUILD_ID_PLACEHOLDER";
    const std::string BUILD_PLATFORM = "ARM64 (WSL Linux MATLAB)";
    
    inline std::string get_version_string() {
        return GIT_SHORT + " (" + BUILD_TIME + ")";
    }
}

#endif // BUILD_INFO_H
EOF

# Replace placeholders
sed -i "s/GIT_COMMIT_PLACEHOLDER/$GIT_COMMIT/" "$OUTPUT_DIR/build_info.h"
sed -i "s/GIT_SHORT_PLACEHOLDER/$GIT_SHORT/" "$OUTPUT_DIR/build_info.h"
sed -i "s/GIT_BRANCH_PLACEHOLDER/$GIT_BRANCH/" "$OUTPUT_DIR/build_info.h"
sed -i "s/BUILD_TIME_PLACEHOLDER/$BUILD_TIME/" "$OUTPUT_DIR/build_info.h"
sed -i "s/BUILD_ID_PLACEHOLDER/$BUILD_ID/" "$OUTPUT_DIR/build_info.h"

echo "✓ Created: SOURCE_COMMIT.txt"
echo "✓ Created: BUILD_INFO.txt"
echo "✓ Created: build_info.h"
echo ""
echo "Build ID: $BUILD_ID"
echo "Git:      $GIT_SHORT ($GIT_BRANCH)"
echo ""
echo "Next: Run MATLAB codegen in WSL"
