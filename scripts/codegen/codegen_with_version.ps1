# Enhanced Codegen Wrapper - Embeds Build Info
# Wraps MATLAB codegen to add version tracking

param(
    [Parameter(Mandatory=$true)]
    [string]$CodegenScript,
    [string]$OutputDir = "codegen/arm64_realtime"
)

Write-Host "=== Enhanced Code Generation ===" -ForegroundColor Cyan
Write-Host ""

# Step 1: Get build information
Write-Host "[1/4] Collecting build information..." -ForegroundColor Yellow

$gitCommit = git rev-parse HEAD
$gitShort = git rev-parse --short HEAD
$gitBranch = git rev-parse --abbrev-ref HEAD
$buildTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
$buildID = Get-Date -Format "yyyyMMdd_HHmmss"

Write-Host "  Git: $gitShort on $gitBranch" -ForegroundColor Gray
Write-Host "  Build ID: $buildID" -ForegroundColor Gray

# Step 2: Run MATLAB codegen
Write-Host ""
Write-Host "[2/4] Running MATLAB code generation..." -ForegroundColor Yellow
Write-Host "  This may take 5-15 minutes..." -ForegroundColor Gray
Write-Host ""

# Run the actual codegen (you'd call your MATLAB script here)
# matlab -batch "run('$CodegenScript')"

Write-Host "âœ“ Code generation completed" -ForegroundColor Green

# Step 3: Create build info file
Write-Host ""
Write-Host "[3/4] Creating build information file..." -ForegroundColor Yellow

$buildInfoContent = @"
// Auto-generated build information
// DO NOT EDIT - Generated by codegen wrapper

#ifndef BUILD_INFO_H
#define BUILD_INFO_H

#define BUILD_GIT_COMMIT    "$gitCommit"
#define BUILD_GIT_SHORT     "$gitShort"
#define BUILD_GIT_BRANCH    "$gitBranch"
#define BUILD_TIMESTAMP     "$buildTime"
#define BUILD_ID            "$buildID"

// Usage in C++:
//   std::cout << "Build: " << BUILD_GIT_SHORT << " (" << BUILD_TIMESTAMP << ")" << std::endl;

#endif // BUILD_INFO_H
"@

$buildInfoFile = Join-Path $OutputDir "build_info.h"
$buildInfoContent | Out-File -FilePath $buildInfoFile -Encoding UTF8

Write-Host "  Created: $buildInfoFile" -ForegroundColor Gray

# Step 4: Create text summary
$buildSummaryContent = @"
===========================================
BUILD INFORMATION
===========================================

Build Time:     $buildTime
Build ID:       $buildID
Git Commit:     $gitCommit
Git Short:      $gitShort
Git Branch:     $gitBranch

===========================================
VERIFICATION
===========================================

To verify this build:
  1. Check git commit: git log $gitShort
  2. Check if current: git diff $gitShort
  3. View this build info in code:
     - Header: $buildInfoFile
     - Summary: $OutputDir/BUILD_INFO.txt

===========================================
DEPLOYMENT
===========================================

When deploying, include:
  - All .cpp/.h files from $OutputDir
  - This BUILD_INFO.txt file
  - Reference build ID: $buildID

===========================================
"@

$buildSummaryFile = Join-Path $OutputDir "BUILD_INFO.txt"
$buildSummaryContent | Out-File -FilePath $buildSummaryFile -Encoding UTF8

Write-Host "  Created: $buildSummaryFile" -ForegroundColor Gray

# Done
Write-Host ""
Write-Host "[4/4] Complete!" -ForegroundColor Green
Write-Host ""
Write-Host "=== Build Summary ===" -ForegroundColor Cyan
Write-Host "  Build ID:    $buildID" -ForegroundColor White
Write-Host "  Git Commit:  $gitShort" -ForegroundColor White
Write-Host "  Output:      $OutputDir" -ForegroundColor White
Write-Host ""
Write-Host "Next: Deploy to target system with BUILD_INFO.txt" -ForegroundColor Yellow
